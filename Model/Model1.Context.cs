//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _4NH_HAO_Coffee_Shop.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TAHCoffeeEntities : DbContext
    {
        public TAHCoffeeEntities()
            : base("name=TAHCoffeeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Bill> Bills { get; set; }
        public virtual DbSet<BillInfor> BillInfors { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Promo> Promoes { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<MonthlyRevenue> MonthlyRevenues { get; set; }
    
        [DbFunction("TAHCoffeeEntities", "FetchCustomerOfMonth")]
        public virtual IQueryable<FetchCustomerOfMonth_Result> FetchCustomerOfMonth(Nullable<int> month)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FetchCustomerOfMonth_Result>("[TAHCoffeeEntities].[FetchCustomerOfMonth](@month)", monthParameter);
        }
    
        [DbFunction("TAHCoffeeEntities", "FetchDataOfMonth")]
        public virtual IQueryable<FetchDataOfMonth_Result> FetchDataOfMonth(Nullable<int> month)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FetchDataOfMonth_Result>("[TAHCoffeeEntities].[FetchDataOfMonth](@Month)", monthParameter);
        }
    }
}
